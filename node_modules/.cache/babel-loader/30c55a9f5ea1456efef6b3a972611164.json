{"ast":null,"code":"var _jsxFileName = \"/home/arrbxr/Desktop/covid19/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'people',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)']\n      }],\n      data: [confirmed.value, recovered.value, deaths.value]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }) : null;\n  console.log(confirmed, recovered, deaths);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/arrbxr/Desktop/covid19/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","console","log","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAP;AAAuCC,EAAAA;AAAvC,CAAD,KAAqD;AAC/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,EAAC,MAAMX,cAAc,EAArB,EAAZ;AACH,KAFD;;AAIAY,IAAAA,QAAQ;AACX,GANQ,EAMN,EANM,CAAT;AAQA,QAAMC,SAAS,GACbH,SAAS,CAACI,MAAV,gBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEV,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADR;AAEEa,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEhB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAER,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADR;AAEEW,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAE,KAHf;AAIEE,QAAAA,eAAe,EAAE,sBAJnB;AAKED,QAAAA,IAAI,EAAE;AALR,OAPQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAqBI,IAtBN;AAyBE,QAAME,QAAQ,GACbjB,SAAS,gBAEJ,oBAAC,GAAD;AACE,IAAA,IAAI,EAAI;AACNS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADF;AAENG,MAAAA,QAAQ,EAAE,CAAC;AACTC,QAAAA,KAAK,EAAE,QADE;AAETG,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,sBAAjD;AAFR,OAAD,CAFJ;AAMNjB,MAAAA,IAAI,EAAE,CAACC,SAAS,CAACkB,KAAX,EAAkBjB,SAAS,CAACiB,KAA5B,EAAmChB,MAAM,CAACgB,KAA1C;AANA,KADV;AASE,IAAA,OAAO,EAAI;AACTC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADC;AAETC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBnB,OAAQ;AAAnD;AAFE,KATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFI,GAgBF,IAjBR;AAmBQoB,EAAAA,OAAO,CAACC,GAAR,CAAYxB,SAAZ,EAAuBC,SAAvB,EAAkCC,MAAlC;AACV,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAAC4B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtB,OAAO,GAAGc,QAAH,GAAcV,SAD1B,CADJ;AAKH,CA7DD;;AA+DA,eAAeT,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        } \n\n        fetchAPI();\n    }, []);\n\n    const lineChart =\n      dailyData.length ? (\n        <Line\n          data={{\n            labels: dailyData.map(({ date }) => date),\n            datasets: [\n              {\n                data: dailyData.map(({ confirmed }) => confirmed),\n                label: \"Infected\",\n                borderColor: \"#3333ff\",\n                fill: true,\n              },\n              {\n                data: dailyData.map(({ deaths }) => deaths),\n                label: \"Deaths\",\n                borderColor: \"red\",\n                backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n                fill: true,\n              },\n            ],\n          }}\n        />\n      ) : null;\n\n\n      const barChart = (\n       confirmed\n          ? (\n            <Bar \n              data = {{\n                labels: ['Infected', 'Recovered', 'Deaths'],\n                datasets: [{\n                  label: 'people',\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)']\n                }],\n                data: [confirmed.value, recovered.value, deaths.value],\n              }}\n              options = {{\n                legend: { display: false },\n                title: { display: true, text: `Current state in ${country}` }\n              }}\n            />\n          ) : null\n      )\n              console.log(confirmed, recovered, deaths)\n    return(\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}